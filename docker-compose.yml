services:

  mongodb:
    image: mongo:7.0.2
    container_name: store-mongodb
    restart: always
    ports:
      - 27017:27017
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: ["CMD", "mongosh", "mongodb://localhost:27017/"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./data:/data/db
      - ./mongo_dummy_data:/dummy_data
      - ./mongo_auto_import:/docker-entrypoint-initdb.d/
      - ./logs:/var/log/mongodb
    

  redis:
    image: redis:6
    container_name: store-redis
    ports:
      - "${EXPOSE_REDIS_PORT:-}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "INCR", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 3
    volumes:
      - ./redis_data/:/data

  database:
    image: postgres:14.7
    container_name: store-database
    restart: always
    environment:
      - POSTGRES_DB=store
      - POSTGRES_USER=fornow
      - POSTGRES_PASSWORD=passwordfornow
    ports:
      - "${EXPOSE_POSTGRES_PORT:-}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 3s
      timeout: 5s
      retries: 3
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      # - ./sql:/docker-entrypoint-initdb.d

  app:
    build: .
    container_name: store
    ports:
      - 5443:5443
    command: [ "python", "app.py" ]
    volumes:
          - .:/store
          - ./data:/app/data
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      database:
        condition: service_healthy
        

    
      
      