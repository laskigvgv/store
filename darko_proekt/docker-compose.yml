services:

  # redis:
  #   image: redis:6
  #   container_name: docker-redis
  #   ports:
  #     - "${EXPOSE_REDIS_PORT:-}:6379"
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "--raw", "INCR", "ping" ]
  #     interval: 3s
  #     timeout: 5s
  #     retries: 3
  #   volumes:
  #     - ./redis_data/:/data

  # database:
  #   image: postgres:14.7
  #   container_name: docker-database
  #   restart: always
  #   environment:
  #     - POSTGRES_DB=$DB_NAME
  #     - POSTGRES_USER=$DB_USER
  #     - POSTGRES_PASSWORD=$DB_PASSWORD
  #   ports:
  #     - "${EXPOSE_POSTGRES_PORT:-}:5432"
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
  #       ]
  #     interval: 3s
  #     timeout: 5s
  #     retries: 3
  #   volumes:
  #     - ./postgres_data:/var/lib/postgresql/data
  #     - ./sql:/docker-entrypoint-initdb.d

  # dataset_worker:
  #   build: .
  #   container_name: docker-dataset-worker
  #   command: [ "python", "run_worker.py" ]
  #   env_file: .env
  #   volumes:
  #     - .:/suiteapi
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy

  app:
    build: .
    container_name: dashboard
    ports:
      - 5443:5443
    command: [ "python", "app.py" ]
    volumes:
      - .:/darko_proekt
      